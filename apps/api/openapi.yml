openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        "200":
          description: ""
  /users:
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateUserRequest"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionResponsePrimary"
      tags: &a2
        - users
    get:
      operationId: UsersController_findAll
      parameters:
        - name: field
          required: false
          in: query
          schema:
            type: string
        - name: order
          required: false
          in: query
          schema:
            type: string
        - name: returnFullCount
          required: false
          in: query
          schema:
            type: boolean
        - name: responseType
          required: false
          in: query
          schema:
            type: string
        - name: page
          required: false
          in: query
          schema:
            type: number
        - name: pageSize
          required: false
          in: query
          schema:
            type: number
        - name: name
          required: false
          in: query
          schema:
            type: string
        - name: username
          required: false
          in: query
          schema:
            type: string
        - name: email
          required: false
          in: query
          schema:
            type: string
        - name: country
          required: false
          in: query
          schema:
            type: string
        - name: location
          required: false
          in: query
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              examples:
                UserResponse:
                  value:
                    metadata:
                      pagination:
                        page: 1
                        pageSize: 10
                      links:
                        first: https://example.com/api/users?page=1
                        prev: https://example.com/api/users?page=0
                        next: https://example.com/api/users?page=2
                      query:
                        page: 1
                        pageSize: 10
                        username: john_doe
                        country: USA
                        field: username
                        order: asc
                        responseType: mini
                    results:
                      - id: 1
                        username: john_doe
                        profilePicture: https://example.com/image.jpg
                        country: USA
                        bio: I am a cool person
                        email: john.doe@example.com
                        followers: 0
                        level: 0
                        name: John Doe
                        updatedAt: &a1 2024-11-30T20:26:09.546Z
                MiniUserResponse:
                  value:
                    metadata:
                      pagination:
                        page: 1
                        pageSize: 10
                      links:
                        first: https://example.com/api/users?page=1
                        prev: https://example.com/api/users?page=0
                        next: https://example.com/api/users?page=2
                      query:
                        page: 1
                        pageSize: 10
                        username: john_doe
                        country: USA
                        field: username
                        order: asc
                        responseType: mini
                    results:
                      - id: 1
                        username: john_doe
                MiniUserResponseWithCountry:
                  value:
                    metadata:
                      pagination:
                        page: 1
                        pageSize: 10
                      links:
                        first: https://example.com/api/users?page=1
                        prev: https://example.com/api/users?page=0
                        next: https://example.com/api/users?page=2
                      query:
                        page: 1
                        pageSize: 10
                        username: john_doe
                        country: USA
                        field: username
                        order: asc
                        responseType: mini
                    results:
                      - id: 1
                        username: john_doe
                        profilePicture: https://example.com/image.jpg
                        country: USA
                MiniUserResponseWithProfilePicture:
                  value:
                    metadata:
                      pagination:
                        page: 1
                        pageSize: 10
                      links:
                        first: https://example.com/api/users?page=1
                        prev: https://example.com/api/users?page=0
                        next: https://example.com/api/users?page=2
                      query:
                        page: 1
                        pageSize: 10
                        username: john_doe
                        country: USA
                        field: username
                        order: asc
                        responseType: mini
                    results:
                      - id: 1
                        username: john_doe
                        profilePicture: https://example.com/image.jpg
                ExtendedUserResponse:
                  value:
                    metadata:
                      pagination:
                        page: 1
                        pageSize: 10
                      links:
                        first: https://example.com/api/users?page=1
                        prev: https://example.com/api/users?page=0
                        next: https://example.com/api/users?page=2
                      query:
                        page: 1
                        pageSize: 10
                        username: john_doe
                        country: USA
                        field: username
                        order: asc
                        responseType: mini
                    results:
                      - id: 1
                        username: john_doe
                        profilePicture: https://example.com/image.jpg
                        country: USA
                        bio: I am a cool person
                        email: john.doe@example.com
                        followers: 0
                        level: 0
                        name: John Doe
                        updatedAt: *a1
                        createdAt: 2024-11-30T20:26:09.546Z
                        following: 0
                        location: New York
          description: ""
      tags: *a2
  /users/{id}:
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
        - name: responseType
          required: true
          in: query
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: "#/components/schemas/MiniUserResponse"
                  - $ref: "#/components/schemas/UserResponse"
                  - $ref: "#/components/schemas/ExtendedUserResponse"
                  - $ref: "#/components/schemas/MiniUserResponseWithCountry"
                  - $ref: "#/components/schemas/MiniUserResponseWithProfilePicture"
              examples:
                UserResponse:
                  value:
                    id: 1
                    username: john_doe
                    profilePicture: https://example.com/image.jpg
                    country: USA
                    bio: I am a cool person
                    email: john.doe@example.com
                    followers: 0
                    level: 0
                    name: John Doe
                    updatedAt: &a3 2024-11-30T20:26:09.546Z
                MiniUserResponse:
                  value:
                    id: 1
                    username: john_doe
                MiniUserResponseWithCountry:
                  value:
                    id: 1
                    username: john_doe
                    profilePicture: https://example.com/image.jpg
                    country: USA
                MiniUserResponseWithProfilePicture:
                  value:
                    id: 1
                    username: john_doe
                    profilePicture: https://example.com/image.jpg
                ExtendedUserResponse:
                  value:
                    id: 1
                    username: john_doe
                    profilePicture: https://example.com/image.jpg
                    country: USA
                    bio: I am a cool person
                    email: john.doe@example.com
                    followers: 0
                    level: 0
                    name: John Doe
                    updatedAt: *a3
                    createdAt: 2024-11-30T20:26:09.546Z
                    following: 0
                    location: New York
          description: ""
      tags: *a2
    patch:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateUserInfo"
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionResponsePrimary"
      tags: *a2
    delete:
      operationId: UsersController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionResponsePrimary"
      tags: *a2
  /auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokensResponse"
      tags: &a4
        - auth
  /auth/refresh:
    get:
      operationId: AuthController_refresh
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokensResponse"
        "401":
          description: ""
      tags: *a4
      security:
        - bearer: []
  /auth/google:
    get:
      operationId: AuthController_auth
      parameters: []
      responses:
        "200":
          description: ""
      tags: *a4
  /auth/google/callback:
    get:
      operationId: AuthController_authCallback
      parameters: []
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokensResponse"
      tags: *a4
      security:
        - bearer: []
info:
  title: winning.sh API
  description: The Winning.sh API description
  version: 1.0 alpha
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    MiniUserResponse:
      type: object
      properties:
        id:
          type: number
          readOnly: true
        username:
          type: string
          readOnly: true
      required:
        - id
        - username
    MiniUserResponseWithProfilePicture:
      type: object
      properties:
        id:
          type: number
          readOnly: true
        username:
          type: string
          readOnly: true
        profilePicture:
          type: string
          readOnly: true
      required:
        - id
        - username
        - profilePicture
    MiniUserResponseWithCountry:
      type: object
      properties:
        id:
          type: number
          readOnly: true
        username:
          type: string
          readOnly: true
        profilePicture:
          type: string
          readOnly: true
        country:
          type: string
          readOnly: true
      required:
        - id
        - username
        - profilePicture
        - country
    UserResponse:
      type: object
      properties:
        id:
          type: number
          readOnly: true
        username:
          type: string
          readOnly: true
        profilePicture:
          type: string
          readOnly: true
        country:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        bio:
          type: string
          readOnly: true
        level:
          type: number
          readOnly: true
        name:
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        followers:
          type: number
          readOnly: true
      required:
        - id
        - username
        - profilePicture
        - country
        - email
        - bio
        - level
        - name
        - updatedAt
        - followers
    ExtendedUserResponse:
      type: object
      properties:
        id:
          type: number
          readOnly: true
        username:
          type: string
          readOnly: true
        profilePicture:
          type: string
          readOnly: true
        country:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        bio:
          type: string
          readOnly: true
        level:
          type: number
          readOnly: true
        name:
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        followers:
          type: number
          readOnly: true
        location:
          type: string
          readOnly: true
        following:
          type: number
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
      required:
        - id
        - username
        - profilePicture
        - country
        - email
        - bio
        - level
        - name
        - updatedAt
        - followers
        - location
        - following
        - createdAt
    AdminUserResponse:
      type: object
      properties:
        id:
          type: number
          readOnly: true
        username:
          type: string
          readOnly: true
        profilePicture:
          type: string
          readOnly: true
        country:
          type: string
          readOnly: true
        email:
          type: string
          readOnly: true
        bio:
          type: string
          readOnly: true
        level:
          type: number
          readOnly: true
        name:
          type: string
          readOnly: true
        updatedAt:
          format: date-time
          type: string
          readOnly: true
        followers:
          type: number
          readOnly: true
        location:
          type: string
          readOnly: true
        following:
          type: number
          readOnly: true
        createdAt:
          format: date-time
          type: string
          readOnly: true
        subscription:
          type: string
          readOnly: true
          enum:
            - free
            - pro
            - premium
        role:
          type: string
          readOnly: true
          enum:
            - admin
            - user
      required:
        - id
        - username
        - profilePicture
        - country
        - email
        - bio
        - level
        - name
        - updatedAt
        - followers
        - location
        - following
        - createdAt
        - subscription
        - role
    PaginationInstance:
      type: object
      properties:
        page:
          type: number
          readOnly: true
        pageSize:
          type: number
          readOnly: true
        total:
          type: number
      required:
        - page
        - pageSize
    LinksInstance:
      type: object
      properties:
        first:
          type: string
          readOnly: true
        prev:
          type: string
          readOnly: true
        next:
          type: string
          readOnly: true
      required:
        - first
        - prev
        - next
    QueryMetadata:
      type: object
      properties:
        pagination:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/PaginationInstance"
        links:
          $ref: "#/components/schemas/LinksInstance"
        query:
          type: object
      required:
        - pagination
    BaseQueryResponse:
      type: object
      properties:
        results:
          type: array
          items:
            type: array
        metadata:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/QueryMetadata"
      required:
        - results
        - metadata
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        bio:
          type: string
        email:
          type: string
        password:
          type: string
        profilePicture:
          type: string
        country:
          type: string
        location:
          type: string
      required:
        - name
        - username
        - email
        - password
        - country
    ActionResponsePrimary:
      type: object
      properties:
        id:
          type: number
          readOnly: true
      required:
        - id
    UpdateUserInfo:
      type: object
      properties:
        profilePicture:
          type: string
        country:
          type: string
        username:
          type: string
        name:
          type: string
        bio:
          type: string
        location:
          type: string
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    TokensResponse:
      type: object
      properties:
        accessToken:
          type: string
          readOnly: true
        refreshToken:
          type: string
          readOnly: true
      required:
        - accessToken
        - refreshToken
